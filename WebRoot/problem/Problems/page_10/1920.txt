</p><div class="ptx" lang="en-US">Surely you have already come across the Towers of Hanoi problem: Wooden disks of different sizes are stacked on three pegs, and initially, all disks are stacked on the same peg sorted by size, with the largest disk at the bottom. The objective is to transfer the entire tower to one of the other pegs, moving only one disk at a time and never putting a larger disk onto a smaller one.
<br>According to an old myth, the monks at an ancient Tibetian monastery have been trying to solve an especially large instance of this problem with 47 disks for thousands of years. Since this requires at least 2<sup>47</sup> - 1 moves and the monks started out without a strategy, they messed it all up while still following the rules. Now they would like to have the disks stacked up neatly on any arbitrary peg using the minimum number of moves. But they all took a vow which forbids them to move the disks contrary to the rules. They want to know on which peg they should best stack the disks, and the minimum number of moves needed.
<br>Write a program that solves this problem for the monks. Your program should also be able to handle any number N (0 < N <= 100 000) of disks. The numbers involved in the computation can become quite large. Because of that, the monks are only interested in the number of moves modulo 1 000 000.
<br><b>Example</b>
<br>The following example can be solved in four moves.
<br><center><img src=images/1920_1.jpg></center>
<br></div><p class="pst">Input</p><div class="ptx" lang="en-US">The first line of the input file hanoi.in consists of the number N (N <= 100000) of disks. The second line consists of three integers s1, s2, s3 with 0 <= s1, s2, s3 <= N and s1+s2+s3 = N, the number of disks on each of the three pegs. Lines three to five each contain the sizes of the disks for one peg. More precisely:
<br>The (i + 2)-th line of the input file consists of integer numbers m<sub>i,1</sub> . . .m<sub>i,si</sub> with 1 <= m<sub>i,j</sub> <= N, the sizes of the disks on peg i. The disks are given from bottom to top, thus m<sub>i,1</sub> > m<sub>i,2</sub> > . . . > m<sub>i,si</sub> .
<br>Note that an empty stack is given by an empty line. The set of N disks have different sizes. All numbers are separated by a single space.</div><p class="pst">Output</p><div class="ptx" lang="en-US">The first line of the output file hanoi.out consists of the number d in {1, 2, 3} of the peg onto which the disks can be stacked using the minimum number of moves. The second line consists of the number M of required moves modulo 1 000 000.</div><p class="pst">Sample Input</p><pre class="sio">7
2 1 4
2 1
3
7 6 5 4</pre><p class="pst">Sample Output</p><pre class="sio">3
4</pre><p class="pst">