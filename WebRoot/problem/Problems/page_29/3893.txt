</p><div class="ptx" lang="en-US">Billy is a hard-working student. He is fond of computers and intends to learn as much as possible. Now he studies graph theory, and must write a program to build the graph which is shown on the Figure.
<br>
<br><center><img src="images/3893_1.png"></center>
<br>
<br>The vertices of the graph are labeled sequentially with integer keys starting from 0 to N - 1 (N≤10000). There are two types of edges: backward edges - labeled with B in the Figure (for example from node 4 to node 2, or from node 3 to node 1), and forward edges, labeled with F in the Figure (for example from node 1 to node 2 or from node 0 to node 3). Billy’s program starts with an initial graph that contains the vertices 0, 1, 2, 3, and must continue to build the graph based on a sequence of commands written in a text file. A command has the following specification:
<br>
<br><center>index0 string_of_characters index1</center>
<br>
<br>where index0 and index1 are the keys of vertices, and string_of_characters is a sequence of actions <b>executed from right to left</b>. An action is represented by one of the following characters:
<br><center>
<br><table border="1"><tr><td>Character</td><td>Action</td></tr><tr><td>f</td><td>Follow the Forward edge if it does exist or creates it and the corresponding vertex from an argument node</td></tr><tr><td>b</td><td>Follow the backward edge if it does exist or creates it and corresponding vertex, starting from an argument node</td></tr><tr><td>k</td><td>Prints the key of the argument node</td></tr><tr><td>&lt;</td><td>v[index0] = argument node</td></tr><tr><td>=</td><td>Prints ‘=’ if v[index0] == node or ‘#’ otherwise</td></tr></table>
<br></center>
<br>where v is the array of the nodes of the graph. The argument of the first operation is the node v[index1]. The result of the operations f and b is a node that represents the argument for all the other operations. The operations < and = are the leftmost specified. For example, for the command 4 &lt;kff 0 the actions are: 
<br><p style="padding-left: 30px">
<br>index0 = 4, index1 = 0 
<br>x = f(v[0]) // forward to node 3,  x = 3    
<br>y = f(x) // forward  creates node (4), y = 4   
<br>k(y) // prints the key (4)  
<br>V[4] = y // put node (4) in array v
<br></p>
<br>A node is put in the array v only by the command &lt;. Initially the array contains the nodes with keys 0, 1, 2, 3, v[0]=0, v[1]=1,v[2]=2 and v[3]=3.</div><p class="pst">Input</p><div class="ptx" lang="en-US">The file contains the sequence of commands. White spaces can occur freely in the input. The input data terminate with an end of file.</div><p class="pst">Output</p><div class="ptx" lang="en-US">Each print must be to the standard output from the beginning of a line. There are no empty lines in between.</div><p class="pst">Sample Input</p><pre class="sio">4 &lt;kf 3
0 =bb 4
7 &lt;ff 3</pre><p class="pst">Sample Output</p><pre class="sio">4
=</pre><p class="pst">