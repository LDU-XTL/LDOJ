</p><div class="ptx" lang="en-US">A set of code words and a text are given. The text is supposed to contain a message made up of the code words embedded in the text in a peculiar (and possibly ambiguous) way. 
<br>
<br>The code words and the text are sequences made up of the upper and lower case letters of the English alphabet only. Case-sensitivity is assumed. The length of a code word is defined in the usual way: For example, the code word ALL has length 3.
<br>
<br>The letters of a code word do not have to occur consecutively in the given text. For example, the code word ALL will always occur in the text within a subsequence in the form of AuLvL where u and v denote arbitrary (possibly empty) sequences of letters. We say that AuLvL is a covering sequence for ALL. In general, a covering sequence for a code word is defined as a subsequence of the text such that the first letter and the last letter of the subsequence are the same as those of the code word and it is possible to obtain the code word by deleting some (possibly none) of the letters of the subsequence. It should be noted that a code word may occur within one or more covering sequences or  may not occur in the text at all, and that a covering sequence may be a covering sequence for more than one code word.
<br>
<br>A covering sequence is identified by its start position (position of its first letter) and its end position (position of its last letter) in the text. (The first letter of the text is at position 1.) We say that two covering sequences, say c1 and c2,  do not overlap if the start position of c1 is greater than (>) the end position of c2 or vice versa. Otherwise we say that the two covering sequences overlap.
<br>
<br>To extract the message hidden in the text you undertake the task of forming a solution. A solution is a set of items, each consisting of a code word and a covering sequence for this code word, so that the following conditions are all satisfied:
<br>a)	the covering sequences do not overlap with each other; 
<br>b)	a covering sequence does not exceed 1000 in length; 
<br>c)	the sum of the lengths of the code words is maximal. (Each item contributes the length of the code word it contains to the sum.) 
<br>
<br>1 <= N <= 100 where N is the number of code words.
<br>The maximum length of a code word is 100 letters.
<br>1 <=  length of the given text <= 1,000,000 letters.
<br>We say that a covering sequence c for a code word w is right-minimal if no proper prefix of c (a proper prefix of c is an initial subsequence of c that is not equal to c) is a covering sequence for w. For example, for the code word ALL, AAALAL is a right-minimal covering sequence whereas  AAALALAL is also a covering sequence, but not right-minimal.
<br>It is guaranteed that in the given text 
<br>a)	for each position in the text the number of right-minimal covering sequences containing that position does not exceed  2500;  
<br>b)	the number of right-minimal covering sequences does not exceed 10,000.
<br>
<br></div><p class="pst">Input</p><div class="ptx" lang="en-US">Your program is to read from standard input. The first line contains the value of N. Each of the following N input lines contains a code word which is a sequence of letters without any blank in between. Integers 1 through N serve as the id-numbers for the code words. The last line contains the text, which consists of a sequence of letters (terminated by an end-of-line character followed by the end-of-file symbol). 
<br>
<br></div><p class="pst">Output</p><div class="ptx" lang="en-US">Your program is to write to standard output. The first line will contain the sum obtained by your solution. </div><p class="pst">Sample Input</p><pre class="sio">4
RuN
RaBbit
HoBbit
StoP
StXRuYNvRuHoaBbvizXztNwRRuuNNP</pre><p class="pst">Sample Output</p><pre class="sio">12</pre><p class="pst">