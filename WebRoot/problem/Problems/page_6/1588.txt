</p><div class="ptx" lang="en-US">Hermes Poseidon (HP) has produced a new calculator, the HP CXX, using the very latest in modern technology. It supports the four basic arithmetic operations on integer values from I to MMMMCMXCIX.
<br>In this problem, you are simulating The HP CXX. Each line of input will be either a roman numeral representation of a positive integer (between I(1) and MMMMCMXCIX(4999)), which will then be pushed to the top of the virtual stack, or it will be an arithmetic operation (+ - * /) to be performed on the top two values of the stack. In addition, there is the = operation, which is a request to print the value of the top of the stack (in roman numerals, of course).
<br>For the - operation, subtract the first number on the stack from the second. For /, divide the second number on the stack by the first. An attempt to divide by 0 should result in the error message "division by zero exception". When that happens, push the dividend (non-zero number) back onto the stack, but not the divisor (zero).
<br>If an operation is requested, and there are insufficient numbers on the stack, print the error "stack underflow" and leave the stack unchanged. This applies to both the binary operations +-*/ and the print operation =.
<br>If an attempt is made to print a number whose value is 0 or less, or whose value is greater than MMMMCMXCIX(4999), display the error message "out of range exception" and go on to the next line of input.
<br>
<br><b>Roman Numerals</b>
<br>For those who are unfamiliar with Roman Numerals, here is a quick summary:
<br>Each letter used in Roman numerals stands for a different number:
<br><center><pre>
<br>Roman Numeral       Number
<br>--------------------------
<br>     I                1   
<br>     V                5   
<br>     X                10  
<br>     L                50  
<br>     C                100 
<br>     D                500 
<br>     M                1000</pre></center>
<br>A string of letters means that their values should be added together. For example, XXX = 10 + 10 + 10 = 30, and LXI = 50 + 10 + 1 = 61. If a smaller value is placed before a larger one,
<br>we subtract instead of adding. For instance, IV = 5 − 1 = 4 and XC = 100 − 10 = 90.
<br><ul>
<br><li> Except for M, do not add more than three of the same letters together.
<br><li> Subtract only powers of ten, such as I, X, or C. Writing VL for 45 is not allowed: write XLV instead.
<br><li> Subtract only a single letter from a single numeral. Write VIII for 8, not IIX; 19 is XIX, not IXX.
<br><li> Don't subtract a letter from another letter more than ten times greater. This means that you can only subtract I from V or X, and X from L or C, so MIM is illegal.
<br></ul></div><p class="pst">Input</p><div class="ptx" lang="en-US">Each input line consists of either:
<br><ul><li>A Roman numeral between I and MMMMCMXCIX, or
<br><li>An arithmetic operation +, -, /, or *, or the print operator, =
<br>The input ends at the end-of-file.</ul></div><p class="pst">Output</p><div class="ptx" lang="en-US">A line will be output:
<br><ul>
<br><li>For every print operation, print the value at the top of the stack, or
<br><li>One of the error messages, on a line by itself:
<br><ul><li>division by zero exception
<br><li>stack underflow
<br><li>out of range exception</ul></ul>
<br>No other output should be produced</div><p class="pst">Sample Input</p><pre class="sio">I
I
+
=
II
*
=
VIII
-
=</pre><p class="pst">Sample Output</p><pre class="sio">II
IV
out of range exception</pre><p class="pst">