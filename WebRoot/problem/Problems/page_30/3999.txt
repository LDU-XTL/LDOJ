</p><div class="ptx" lang="en-US">Image blurring occurs when the object being captured is out of the camera’s focus. The top two figures on the right are an example of an image and its blurred version. Restoring the original image given only the blurred version is one of the most interesting topics in image processing. This process is called deblurring, which will be your task for this problem.
<br><center><img src="images\3999_1.png"> <img src="images\3999_2.png"> <img src="images\3999_3.png"></center>
<br>In this problem, all images are in grey-scale (no colours). Images are represented as a 2 dimensional matrix of real numbers, where each cell corresponds to the brightness of the corresponding pixel. Although not mathematically accurate, one way to describe a blurred image is through averaging all the pixels that are within (less than or equal to) a certain Manhattan distance (The Manhattan Distance (sometimes called the Taxicab distance) between two points is the sum of the (absolute) difference of their coordinates. The grid on the lower right illustrates the Manhattan distances from the grayed cell.) from each pixel (including the pixel itself). Here’s an example of how to calculate the blurring of a 3*3 image with a blurring distance of 1:
<br><center><img src="formula?tex=blur%5Cleft%28%5Cleft%5B%5Cbegin%7Barray%7D%7Bccc%7D2%2630%2617%5C%5C25%267%2613%5C%5C14%260%2635%5Cend%7Barray%7D%5Cright%5D%5Cright%29%3D%5Cleft%5B%5Cbegin%7Barray%7D%7Bccc%7D%5Cfrac%7B2%2B30%2B25%7D%7B3%7D%26%5Cfrac%7B2%2B30%2B17%2B7%7D%7B4%7D%26%5Cfrac%7B30%2B17%2B13%7D%7B3%7D%5C%5C%5B10px%5D%5Cfrac%7B2%2B25%2B7%2B14%7D%7B4%7D%26%5Cfrac%7B30%2B25%2B7%2B13%2B0%7D%7B5%7D%26%5Cfrac%7B17%2B7%2B13%2B35%7D%7B4%7D%5C%5C%5B10px%5D%5Cfrac%7B25%2B14%2B0%7D%7B3%7D%26%5Cfrac%7B7%2B14%2B0%2B35%7D%7B4%7D%26%5Cfrac%7B13%2B0%2B35%7D%7B3%7D%5Cend%7Barray%7D%5Cright%5D%3D%5Cleft%5B%5Cbegin%7Barray%7D%7Bccc%7D19%2614%2620%5C%5C12%2615%2618%5C%5C13%2614%2616%5Cend%7Barray%7D%5Cright%5D" alt="blur\left(\left[\begin{array}{ccc}2&#38;30&#38;17\\25&#38;7&#38;13\\14&#38;0&#38;35\end{array}\right]\right)=\left[\begin{array}{ccc}\frac{2+30+25}{3}&#38;\frac{2+30+17+7}{4}&#38;\frac{30+17+13}{3}\\[10px]\frac{2+25+7+14}{4}&#38;\frac{30+25+7+13+0}{5}&#38;\frac{17+7+13+35}{4}\\[10px]\frac{25+14+0}{3}&#38;\frac{7+14+0+35}{4}&#38;\frac{13+0+35}{3}\end{array}\right]=\left[\begin{array}{ccc}19&#38;14&#38;20\\12&#38;15&#38;18\\13&#38;14&#38;16\end{array}\right]" align="absmiddle"></center>
<br>Given the blurred version of an image, we are interested in reconstructing the original version assuming that the image was blurred as explained above.</div><p class="pst">Input</p><div class="ptx" lang="en-US">Input consists of several test cases. Each case is specified on H + 1 lines. The first line specifies three non negative integers specifying the width W, the height H of the blurred image and the blurring distance D respectively where (1 ≤ W,H ≤ 10) and (D ≤ min(W/2,H/2)). The remaining H lines specify the gray-level of each pixel in the blurred image. Each line specifies W non-negative real numbers given up to the 2nd decimal place. The value of all the given real numbers will be less than 100.
<br>Zero or more lines (made entirely of white spaces) may appear between cases. The last line of the input file consists of three zeros.</div><p class="pst">Output</p><div class="ptx" lang="en-US">For each test case, print a W * H matrix of real numbers specifying the deblurred version of the image. Each element in the matrix should be approximated to 2 decimal places and right justified in a field of width 8. Separate the output of each two consecutive test cases by an empty line. Do not print an empty line after the last test case. It is guaranteed that there is exactly one unique solution for every test case.</div><p class="pst">Sample Input</p><pre class="sio">2 2 1
1 1
1 1

3 3 1
19 14 20
12 15 18
13 14 16

4 4 2
14 15 14 15
14 15 14 15
14 15 14 15
14 15 14 15

0 0 0</pre><p class="pst">Sample Output</p><pre class="sio">    1.00    1.00
    1.00    1.00

    2.00   30.00   17.00
   25.00    7.00   13.00
   14.00    0.00   35.00

    1.00   27.00    2.00   28.00
   21.00   12.00   17.00    8.00
   21.00   12.00   17.00    8.00
    1.00   27.00    2.00   28.00</pre><p class="pst">