</p><div class="ptx" lang="en-US"><p>This year, ACM/ICPC World finals will be held in a hall in form of a simple polygon. The coaches and spectators are seated along the edges of the polygon. We want to place a rotating scoreboard somewhere in the hall such that a spectator sitting anywhere on the boundary of the hall can view the scoreboard (i.e., his line of sight is not blocked by a wall). Note that if the line of sight of a spectator is tangent to the polygon boundary (either in a vertex or in an edge), he can still view the scoreboard. You may view spectator's seats as points along the boundary of the simple polygon, and consider the scoreboard as a point as well. Your program is given the corners of the hall (the vertices of the polygon), and must check if there is a location for the scoreboard (a point inside the polygon) such that the scoreboard can be viewed from any point on the edges of the polygon.</p></div><p class="pst">Input</p><div class="ptx" lang="en-US"><p>The first number in the input line, <i>T</i> is the number of test cases. Each test case is specified on a single line of input in the form <i>n</i> <i>x</i><sub>1</sub> <i>y</i><sub>1</sub> <i>x</i><sub>2</sub> <i>y</i><sub>2</sub> ... <i>x<sub>n</sub></i> <i>y<sub>n</sub></i> where <i>n</i> (3 &le; <i>n</i> &le; 100) is the number of vertices in the polygon, and the pair of integers <i>x<sub>i</sub></i> <i>y<sub>i</sub></i> sequence specify the vertices of the polygon sorted in order.</p></div><p class="pst">Output</p><div class="ptx" lang="en-US"><p>The output contains <i>T</i> lines, each corresponding to an input test case in that order. The output line contains either YES or NO depending on whether the scoreboard can be placed inside the hall conforming to the problem conditions.</p></div><p class="pst">Sample Input</p><pre class="sio">2
4 0 0 0 1 1 1 1 0
8 0 0  0 2  1 2  1 1  2 1  2 2  3 2  3 0
</pre><p class="pst">Sample Output</p><pre class="sio">YES
NO
</pre><p class="pst">