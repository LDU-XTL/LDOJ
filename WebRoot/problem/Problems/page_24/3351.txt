</p><div class="ptx" lang="en-US"><div><p>Politicians like to get elected. They will do just about anything to get elected. Including changing the rules of the voting: who can vote, where you can vote, when you can vote, etc. One very common practice is called <i>gerrymandering</i>, where the boundaries of &quot;ridings&quot; are redrawn to favour a particular candidate (the one doing the redrawing, of course).</p><p>Your task is to help determine how to do some simple, linear gerrymandering.</p><p>You will be given the information about <i>N</i> ridings (2 &le; <i>N</i> &le; 1000) where there are candidates from <i>p</i> (2 &le; <i>p</i> &le; 10) different parties. These <i>N</i> ridings are linear, in the sense that they are side-by-side; there are two ridings (on the ends) that have only one adjacent riding, with the rest of the ridings having two adjacent ridings. A picture is shown below for <i>N</i> = 4 and <i>p</i> = 2 (which is also the sample data):</p><table border="1" width="100%" id="table1"><tr><td align="center">ã€€</td><td align="center">Riding 1</td><td align="center">Riding 2</td><td align="center">Riding 3</td><td align="center">Riding 4</td></tr><tr><td align="center">Votes for Party 1</td><td align="center">1</td><td align="center">4</td><td align="center">1</td><td align="center">6</td></tr><tr><td align="center">Votes for Party 2</td><td align="center">5</td><td align="center">3</td><td align="center">2</td><td align="center">1</td></tr></table><p>Note that Riding 1 and Riding 2 are adjacent, Riding 2 and 3 are adjacent, Riding 3 and 4 are adjacent. No other ridings are adjacent.</p><p>You have some financial backing that will let you bribe the people in charge of setting the boundaries of ridings: in particular, there is a fixed rate to merge two adjacent boundaries. When you merge two ridings, the votes of the ridings merge together, in the sense that the number of votes of party 1 is the sum of the votes of party 1 in each riding, and likewise for all other parties.</p><p>Your task is to merge the minimum number of regions such that the first party (your party!) has a majority of the ridings. Note that to win a riding, the party must have more votes than any other party in that riding. Also note that to have a majority of ridings, if there are <i>Q</i> ridings (where <i>Q</i> &le; <i>N</i>), then your party has won at least &lfloor;<i> Q</i> &frasl; 2 &rfloor; + 1 of the ridings.</p></div></div><p class="pst">Input</p><div class="ptx" lang="en-US"><p>The first line of input will consist of the integer <i>N</i>. The second line of input will consist of the integer <i>p</i>. The next <i>N</i> lines will each contain <i>p</i> non-negative integers (where each integer is at most 10000), separated by one space character. Specifically, the <i>p</i> integers on each line are <i>v</i><sub>1</sub> <i>v</i><sub>2</sub> ... <i>v<sub>p</sub></i> where <i>v</i><sub>1</sub> is the number of votes that party 1 will receive in this riding, <i>v</i><sub>2</sub> is the number of votes that party 2 will receive in this riding, etc. You may also assume that the total number of voters is less than 2 billion.</p></div><p class="pst">Output</p><div class="ptx" lang="en-US"><p>One line, consisting of an integer, which gives the minimum number of ridings that need to be merged in order for the first party to win a majority of ridings. If the first party cannot win, even with any number of mergers, output -1.</p></div><p class="pst">Sample Input</p><pre class="sio">Sample Input 1
4
2
1 5
4 3
1 2
6 1

Sample Input 2
3
3
2 0 1
1 3 0
0 0 1</pre><p class="pst">Sample Output</p><pre class="sio">Output for Sample Input 1
1

Output for Sample Input 2
-1</pre><p class="pst">