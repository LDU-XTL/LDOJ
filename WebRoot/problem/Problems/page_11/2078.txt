</p><div class="ptx" lang="en-US">Given an n*n matrix A, whose entries Ai,j are integer numbers ( 0 <= i < n, 0 <= j < n ). An operation SHIFT at row i ( 0 <= i < n ) will move the integers in the row one position right, and the rightmost integer will wrap around to the leftmost column.
<br><center><img src=images/2078_1.jpg></center>
<br>You can do the SHIFT operation at arbitrary row, and as many times as you like. Your task is to minimize
<br><center><font size=5>max<sub>0<=j< n</sub>{Cj|Cj=Σ<sub>0<=i< n</sub>A<sub>i,j</sub>}</font></center></div><p class="pst">Input</p><div class="ptx" lang="en-US">The input consists of several test cases. The first line of each test case contains an integer n. Each of the following n lines contains n integers, indicating the matrix A. The input is terminated by a single line with an integer −1. You may assume that 1 <= n <= 7 and |A<sub>i,j</sub>| < 10<sup>4</sup>.</div><p class="pst">Output</p><div class="ptx" lang="en-US">For each test case, print a line containing the minimum value of the maximum of column sums.</div><p class="pst">Sample Input</p><pre class="sio">2
4 6
3 7
3
1 2 3
4 5 6
7 8 9
-1</pre><p class="pst">Sample Output</p><pre class="sio">11
15</pre><p class="pst">