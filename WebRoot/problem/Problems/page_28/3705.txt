</p><div class="ptx" lang="en-US"><div><p>You will be given a list of <i>n</i> integers <i>S</i> = {1, 2, ... , (<i>n</i>-1),<i> n</i>}, please write a program to calculate the minimum number of instructions required to change the list in descending order {<i>n</i>, (<i>n</i>-1), ..., 1}. Let <i>S</i>[<i>i</i>] denote the <i>i</i>-th element of <i>S</i>, 1 &le; <i>i</i> &le; <i>n</i>.</p><p>Each instruction takes a successive subsequence and removes that subsequence from the list, then insert that subsequence into any position of the list as a parameter. Each instruction can be represented by three numbers (<i>pos</i><sub>1</sub>,<i>length</i>,<i>pos</i><sub>2</sub>)，which means we will remove subsequence <i>S</i>[<i>pos</i><sub>1</sub>] .....<i> S</i>[<i>pos</i><sub>1</sub>+<i>length</i>-1], then insert them after the <i>S</i>[<i>pos</i><sub>2</sub>] (<i>pos</i><sub>2</sub>=0 will insert it at the beginning). We always have: 1 &le; <i>pos</i><sub>1</sub> &le; <i>n</i>, 1 &le; <i>length</i> &le; <i>n</i>+1-<i>pos</i><sub>1</sub>, 0 &le; <i>pos</i><sub>2</sub> &le; <i>n</i>-<i>length</i></p><p>For example:<br>The list <i>S </i>= {4,6,5,3,1,2}，instruction (2,3,0) to get {6,5,3,4,1,2}<br>The list <i>S </i>= {4,6,5,3,1,2}，instruction (3,1,2) to get {4,6,5,3,1,2}<br>The list <i>S </i>= {4,6,5,3,1,2}，instruction (4,3,1) to get {4,3,1,2,6,5}<br>The list <i>S </i>= {4,6,5,3,1,2}，instruction (2,4,2) to get {4,2,6,5,3,1}</p></div></div><p class="pst">Input</p><div class="ptx" lang="en-US"><p>The input contains one integer <i>n</i>. 1 &le; <i>n</i> &le; 100</p></div><p class="pst">Output</p><div class="ptx" lang="en-US"><p>The first line of output contains one integer <i>C</i> denoting the number of instructions.<br>Following <i>C</i> lines, each contains three numbers (<i>pos</i><sub>1</sub>, <i>length</i>, <i>pos</i><sub>2</sub>) for one instruction. If there are many such instructions, you can output any one of them.</p></div><p class="pst">Sample Input</p><pre class="sio"><b>Sample Input 1</b>
3
<b>Sample Input 2</b>
4
</pre><p class="pst">Sample Output</p><pre class="sio"><b>Sample Output 1</b>
2
1 1 2
1 1 1
<b>Sample Output 2</b>
3
1 2 2
1 1 1
3 1 3</pre><p class="pst">