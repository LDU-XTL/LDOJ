</p><div class="ptx" lang="en-US">Morse code represents characters as variable length sequences of dots and dashes. In practice, characters in a message are delimited by short pauses. The following table shows the Morse code sequences:
<br><table border="1" cellpadding="0" cellspacing="0" width="100%">  <tr>    <td width="12%">A</td>    <td width="12%">.-</td>    <td width="12%">H</td>    <td width="12%">....</td>    <td width="13%">O</td>    <td width="13%">---</td>    <td width="13%">V</td>    <td width="13%">...-</td>  </tr>  <tr>    <td width="12%">B</td>    <td width="12%">-...</td>    <td width="12%">I</td>    <td width="12%">..</td>    <td width="13%">P</td>    <td width="13%">.--.</td>    <td width="13%">W</td>    <td width="13%">.--</td>  </tr>  <tr>    <td width="12%">C</td>    <td width="12%">-.-.</td>    <td width="12%">J</td>    <td width="12%">.---</td>    <td width="13%">Q</td>    <td width="13%">--.-</td>    <td width="13%">X</td>    <td width="13%">-..-</td>  </tr>  <tr>    <td width="12%">D</td>    <td width="12%">-..</td>    <td width="12%">K</td>    <td width="12%">-.-</td>    <td width="13%">R</td>    <td width="13%">.-.</td>    <td width="13%">Y</td>    <td width="13%">-.--</td>  </tr>  <tr>    <td width="12%">E</td>    <td width="12%">.</td>    <td width="12%">L</td>    <td width="12%">.-..</td>    <td width="13%">S</td>    <td width="13%">...</td>    <td width="13%">Z</td>    <td width="13%">--..</td>  </tr>  <tr>    <td width="12%">F</td>    <td width="12%">..-.</td>    <td width="12%">M</td>    <td width="12%">--</td>    <td width="13%">T</td>    <td width="13%">-</td>    <td width="13%">　</td>    <td width="13%">　</td>  </tr>  <tr>    <td width="12%">G</td>    <td width="12%">--.</td>    <td width="12%">N</td>    <td width="12%">-.</td>    <td width="13%">U</td>    <td width="13%">..-</td>    <td width="13%">　</td>    <td width="13%">　</td>  </tr></table>
<br>Note that four dot-dash combinations are unassigned. For the purposes of this problem we will assign them as follows (these are not the assignments for actual Morse code):
<br><table border="1" cellpadding="0" cellspacing="0" width="100%">  <tr>    <td width="25%">underscore</td>    <td width="25%">..--</td>    <td width="25%">period</td>    <td width="25%">---.</td>  </tr>  <tr>    <td width="25%">comma</td>    <td width="25%">.-.-</td>    <td width="25%">question mark</td>    <td width="25%">----</td>  </tr></table>
<br>Thus, the message "ACM_GREATER_NY_REGION" is encoded as:
<br>.- -.-. -- ..-- --. .-. . .- - . .-. ..-- -. -.-- ..-- .-. . --. .. --- -.
<br>M.E. Ohaver proposed an encryption scheme based on mutilating Morse code. Her scheme replaces the pauses between letters, necessary because Morse is a variable-length encoding that is not prefix-free, with a string that identifies the number of dots and dashes in each. For example, consider the message ".--.-.--". Without knowing where the pauses should be, this could be "ACM", "ANK", or several other possibilities. If we add length information, however, ".--.-.--242", then the code is unabiguous. 
<br>Ohaver's scheme has three steps, the same for encryption and decryption:
<br>1.	Convert the text to Morse code without pauses but with a string of numbers to indicate code lengths
<br>2.	Reverse the string of numbers
<br>3.	Convert the dots and dashes back into to text using the reversed string of numbers as code lengths
<br>As an example, consider the encrypted message "AKADTOF_IBOETATUK_IJN". Converting to Morse code with a length string yields ".--.-.--..----..-...--..-...---.-.--..--.-..--...----.232313442431121334242". Reversing the numbers and decoding yields the original message "ACM_GREATER_NY_REGION".
<br></div><p class="pst">Input</p><div class="ptx" lang="en-US">This problem requires that you implement Ohaver's encoding algorithm. The input will consist of several messages encoded with Ohaver's algorithm. The first line of the input is an integer n that specifies the number of test cases. The following n lines contain one message per line. Each message will use only the twenty-six capital letters, underscores, commas, periods, and question marks. Messages will not exceed 100 characters in length.</div><p class="pst">Output</p><div class="ptx" lang="en-US">For each message in the input, output the line number starting in column one, a colon, a space, and then the decoded message. The output format must be adhered to precisely.</div><p class="pst">Sample Input</p><pre class="sio">5
AKADTOF_IBOETATUK_IJN
PUEL
QEWOISE.EIVCAEFNRXTBELYTGD.
?EJHUT.TSMYGW?EJHOT
DSU.XFNCJEVE.OE_UJDXNO_YHU?VIDWDHPDJIKXZT?E
</pre><p class="pst">Sample Output</p><pre class="sio">1: ACM_GREATER_NY_REGION
2: PERL
3: QUOTH_THE_RAVEN,_NEVERMORE.
4: TO_BE_OR_NOT_TO_BE?
5: THE_QUICK_BROWN_FOX_JUMPS_OVER_THE_LAZY_DOG
</pre><p class="pst">