</p><div class="ptx" lang="en-US">The FORTH programming language does not support floating-point arithmetic at all. Its author, Chuck Moore, maintains that floating-point calculations are too slow and most of the time can be emulated by integers with proper scaling. For example, to calculate the area of the circle with the radius R he suggests to use formula like R * R * 355 / 113, which is in fact surprisingly accurate. The value of 355 / 113 &asymp; 3.141593 is approximating the value of PI with the absolute error of only about 2*10<sup>-7</sup>. You are to find the best integer approximation of a given floating-point number A within a given integer limit L. That is, to find such two integers N and D (1 <= N, D <= L) that the value of absolute error |A - N / D| is minimal.</div><p class="pst">Input</p><div class="ptx" lang="en-US">The first line of input contains a floating-point number A (0.1 <= A < 10) with the precision of up to 15 decimal digits. The second line contains the integer limit L. (1 <= L <= 100000).</div><p class="pst">Output</p><div class="ptx" lang="en-US">Output file must contain two integers, N and D, separated by space.</div><p class="pst">Sample Input</p><pre class="sio">3.14159265358979
10000
</pre><p class="pst">Sample Output</p><pre class="sio">355 113</pre><p class="pst">