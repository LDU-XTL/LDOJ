</p><div class="ptx" lang="en-US"><span lang="en-us"><p>HTML supports four different text alignments: <code>left</code>, <code>right</code>, <code>center</code> and <code>justify</code>. Compare the following examples:</p><div align="center"><table border="1" style="border-collapse: collapse" bordercolor="#000000"><tr><th>Alignment</th><th>Example</th></tr><tr><th><code>Left</code></th><td><tt>Many years later, as he faced the firing squad, Colonel Aureliano Buendia<br>was to remember that distant afternoon when his father took him to discover<br>ice.</tt></td></tr><tr><th><code>Right</code></th><td><p align="right"><tt>Many years later, as he faced the firing squad, Colonel Aureliano Buendia<br>was to remember that distant afternoon when his father took him to discover<br>ice.</tt></p></td></tr><tr><th><code>Center</code></th><td><p align="center"><tt>Many years later, as he faced the firing squad, Colonel Aureliano Buendia<br>was to remember that distant afternoon when his father took him to discover<br>ice.&nbsp;</tt></p></td></tr><tr><th><code>Justify</code></th><td><tt>Many&nbsp; years&nbsp; later, as he faced the firing squad, Colonel Aureliano Buendia<br>was to remember that distant afternoon when his father took him to discover<br>ice.</tt></td></tr></table></div><p>Text-based browsers render aligned texts by inserting spaces between neighboring words. Here words are strings consisting of non-space characters.</p><p>Now you are to implement a small routine that simulates the text-browsers’ behaviors in rendering aligned texts specified in the table below:</p><div align="center"><table style="border-collapse: collapse;" id="table1" border="1" bordercolor="#000000" width="60%"><tr><th width="12%">Alignment</th><th width="44%">Rendering</th><th width="44%">Spacing</th></tr><tr><th width="12%"><code>Left</code></th><td align="justify" width="44%">Text lines are rendered flush left.</td><td rowspan="2" align="justify" width="44%">Single spaces separate neighboring words.</td></tr><tr><th width="12%"><code>Right</code></th><td align="justify" width="44%">Text lines are rendered flush right.</td></tr><tr><th width="12%"><code>Center</code></th><td align="justify" width="44%">Text lines are centered.</td><td align="justify" width="44%">Single spaces separate neighboring words. Spaces before the first word should be no more and at most one less than those after the last word.</td></tr><tr><th width="12%"><code>Justify</code></th><td align="justify" width="44%">Text lines are justified to both margins except the last one and those that contain a single word, which are aligned left.</td><td align="justify" width="44%">Special spacing is considered for lines that are not required to be aligned left. Multiple spaces may separate neighboring words. For any two “gaps” between words, the one on the left should be no narrower and at most one space wider than the one on the right.</td></tr></table></div><p>Your routine works in a greedy manner, that is, as many as possible words should be put into the first line, then as many as possible words should be put into the second line, etc.. Line width is fixed in your routine to be 75 characters.</p></span></div><p class="pst">Input</p><div class="ptx" lang="en-US"><span lang="en-us"><p>The input contains a single test case on multiple lines. The first line contains only one character among “<code>L</code>”, “<code>R</code>”, “<code>C</code>” and “<code>J</code>”, which means some text is to be aligned left, right, centered or justified. Words of the text are found on the following at most five lines. Those on the same line are separated by at least one spaces. They will only contain characters with ASCII code between 33 and 126 (inclusive) and are less than 75 characters long.</p></span></div><p class="pst">Output</p><div class="ptx" lang="en-US"><p>Just print out the rendered text produced by your routine.</p></div><p class="pst">Sample Input</p><pre class="sio">J
Many years later, as he faced the firing squad, Colonel Aureliano Buendia was to remember 
that distant afternoon when his father took him to discover ice.</pre><p class="pst">Sample Output</p><pre class="sio">Many  years  later, as he faced the firing squad, Colonel Aureliano Buendia
was to remember that distant afternoon when his father took him to discover
ice.</pre><p class="pst">Hint</p><div class="ptx" lang="en-US"><p>Trailing spaces at the end of each output line can be ignored, though keeping them is also acceptable.</p></div><p class="pst">