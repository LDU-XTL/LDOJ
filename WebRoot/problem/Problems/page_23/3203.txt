</p><div class="ptx" lang="en-US"><span lang="en-us"><p>For the sake of simplicity, only the following subset of Python syntax is considered:</p><p><code>PLAIN_TEXT</code>:<code><br>&nbsp;&nbsp;&nbsp; [^&quot;()\[\]{}]+</code> <br> <code>STRING</code>:<code><br>&nbsp;&nbsp;&nbsp; \&quot;[^&quot;]*\&quot;</code> <br> <i>text</i>:<br><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><font color="#7f7f7f">(empty)</font><code><br> &nbsp;&nbsp;&nbsp; | </code><i>text</i> <code> PLAIN_TEXT<br> &nbsp;&nbsp;&nbsp; | </code><i>text</i> <code> STRING<br> &nbsp;&nbsp;&nbsp; | </code><i>text</i> <code> </code> <i>bracket_enclosed_text</i><br> <i>bracket_enclosed_text</i>:<br><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ( </code> <i>text</i> <code> )<br> </code><code>&nbsp;&nbsp;&nbsp; | [ </code> <i>text</i> <code> ]<br> </code><code>&nbsp;&nbsp;&nbsp; | { </code> <i>text</i> <code> }</code></p> <p>From the syntax some terms are defined as follows:</p> <ol> <li><p>String: a sequence delimited by quotes (<code>&quot;</code>) of characters other than quotes, possibly including new-lines.</p> <p>Examples:<br> <code>&nbsp; &quot;a(bc&quot;<br> &nbsp; &quot;a<br> bc)&quot;<br> &nbsp; &quot;usage: foo [bar]<br> this help information<br> is<br> totally<br> useless&quot; </code></p><p>(Python actually <code>&quot;&quot;&quot;</code> for such strings, but let&rsquo;s accept the modification just for this problem.)</p></li> <li><p>Bracket-enclosed text: a sequence of characters other than brackets or quotes enclosed by matched pairs of brackets.</p><p>Example:<br> <code>&nbsp; (1)<br> &nbsp; {a-&gt;[foo.bar(<br> &nbsp; &quot;a[&quot;,b,c<br> &nbsp; )]}</code></p></li> <li><p>Logical new-line: a new-line character that is not part of a string or bracket-enclosed text</p></li> <li><p>Physical line: a maximal sequence of characters other than new-line characters</p><p>Examples:<br> <code>def a(b)&nbsp;&nbsp;&nbsp; </code># physical line 1<code><br> &nbsp; foo.bar(&nbsp; </code># physical line 2<code><br> &nbsp; &quot;a[&quot;,b)&nbsp;&nbsp; </code># physical line 3<code><br> &quot;blah blah, </code># physical line 4<code><br> blah&quot;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code># physical line 5</p></li> <li><p>Logical line: a maximal sequence of characters other than logical new-lines</p><p>Examples:<br> <code>def a(b)&nbsp;&nbsp;&nbsp; </code># logical line 1<code><br> &nbsp; foo.bar(&nbsp; </code># logical line 2<code><br> &nbsp; &quot;a[&quot;,b)&nbsp;&nbsp; </code># logical line 2<code><br> &quot;blah blah, </code># logical line 3<code><br> blah&quot;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code># logical line 3<code>&nbsp;</code></p></li> <li><p>Valid/invalid program: a program without/with mismatched quotes or brackets that are not part of any strings&nbsp; </p><p>Examples:<br> <code>&nbsp; def a(b<br> &nbsp; &quot;blah</code></p></li></ol><p>Given a program, you are to implement the following primitive operations:</p><ul> <li><i>modify</i>(<i>a</i>, <i>b</i>, <i>c</i>): Modify the character at physical line <i>a</i>, column <i>b</i> to <i>c</i></li> <li><i>query</i>(<i>a</i>, <i>b</i>): Tell which logical line the character at physical line <i>a</i>, column <i>b</i> is on.</li></ul></span></div><p class="pst">Input</p><div class="ptx" lang="en-US"><p>The given program appears first in the input followed by a line with a single <code>#</code>. Then come the operation descriptions. Each operation is described in the format <i>c</i><code> </code><i>a</i><code> </code><i>b</i>, where <i>c</i> is a character, <i>a</i> a physical line number and <i>b</i> a column number. Both physical line and column numbers are counted starting from 1. If <i>c</i> is <code>?</code>, the operation will be <i>query</i>(<i>a</i>, <i>b</i>), otherwise it will be <i>modify</i>(<i>a</i>, <i>b</i>, <i>c</i>). The program can be invalid while being edited, but whenever a <i>query</i> operation is demanded, it will always be valid. A <i>modify</i> operation will neither remove existing spaces and new-lines in the program nor introduce new ones. Tabs are not present in the input.</p><p>The program contains up to 10<sup>6</sup> characters (including new-lines) and 10<sup>5</sup> physical lines each consisting of up to 80 characters. And there will be at most 10<sup>5</sup> operations.</p></div><p class="pst">Output</p><div class="ptx" lang="en-US"><p>For each query operation, output a line containing the logical line number.</p></div><p class="pst">Sample Input</p><pre class="sio">aaa
(bb
ccc
dd)
fff
#
? 1 1
? 5 1
b 2 1
d 4 3
? 5 1
" 1 3
" 5 2
? 5 1
a 1 3
f 5 2
? 5 1</pre><p class="pst">Sample Output</p><pre class="sio">1
3
5
1
5</pre><p class="pst">