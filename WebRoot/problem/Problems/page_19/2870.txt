</p><div class="ptx" lang="en-US">Light Up is a puzzle set in a rectangular board divided in smaller squares. Some squares in the board are ``empty'' (white squares the figure below), some squares are ``barriers'' (dark squares in the figure below). A barrier square may have an integer number i associated to it (0 <= i <= 4).
<br>
<br><center><img src=images/2870_1.png>
<br>Figure 2: (a) Puzzle with 6 rows, 7 columns and 7 barriers; (b) a solution to the puzzle.</center>
<br>
<br>In this puzzle the goal is to ``light up'' all the empty squares by placing lamps in some of them (lamps are depicted as circles in the figure). Each lamp illuminates the square it is on, plus all squares in line with it, horizontally or vertically, up to a barrier square or the board end.
<br>
<br>A winning configuration satisfies the following conditions:<ul><li>all empty squares must be lit;</li><li>no lamp may be lit by another lamp;</li><li>all numbered barrier squares must have exactly that number of lamps adjacent to them (in the four squares above, below, and to the side);</li><li>non-numbered barrier squares may have any number of lamps adjacent to them.</li></ul>
<br>
<br>You must write a program to determine the smallest number of lamps that are needed to reach a winning configuration.</div><p class="pst">Input</p><div class="ptx" lang="en-US">The input contains several test cases. The first line of a test case contains two integers N, M indicating respectively the number of rows and the number of columns of the board (1 <= N <= 7, 1 <= M <= 7). The second line contains one integer B indicating the number of barrier squares (0 <= B <= N Ã— M). Each of the next B lines describe a barrier, containing three integers R, C and K, representing respectively the row number (1 <= R <= N), the column number (1 <= C <= M) and the barrier number (-1 <= K <= 4); K = -1 means the barrier is unnumbered. The end of input is indicated by N = M = 0.</div><p class="pst">Output</p><div class="ptx" lang="en-US">For each test case in the input your program must produce one line of output, containing either an integer indicating the smallest number of lamps needed to reach a winning configuration, in case such a configuration exists, or the words `No solution'.</div><p class="pst">Sample Input</p><pre class="sio">2 2
0
2 2
1
2 2 1
6 7
7
2 3 -1
3 3 0
4 2 1
5 4 3
5 6 2
1 7 -1
6 5 -1
0 0</pre><p class="pst">Sample Output</p><pre class="sio">2
No solution
8</pre><p class="pst">