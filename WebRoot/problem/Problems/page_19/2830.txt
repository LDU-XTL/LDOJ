</p><div class="ptx" lang="en-US"><p>Given <i>N</i> real numbers <i>a</i><sub>1</sub>, <i>a</i><sub>2</sub>, &hellip;, <i>a<sub>N</sub></i>, you are to write a program to calculate <i>P</i> as defined below.</p><div align="center"><img src="formula?tex=P%3D%5Cmax_%7B1%5Cleq+i%5Cleq+j%5Cleq+N%7D%5Cleft%5C%7B%5Cprod_%7Bk%3Di%7D%5Eja_k%5Cright%5C%7D" alt="P=\max_{1\leq i\leq j\leq N}\left\{\prod_{k=i}^ja_k\right\}" align="absmiddle"></div></div><p class="pst">Input</p><div class="ptx" lang="en-US"><p>The input consists of several test cases. Each test case consists of two lines:
<br>Line 1: A single positive integer <i>N</i> &le; 100,000.
<br>Line 2: <i>N</i> real numbers <i>a</i><sub>1</sub>, <i>a</i><sub>2</sub>, &hellip;, <i>a<sub>N</sub></i> (|<i>a<sub>i</sub></i>| &le; 30 for all <i>i</i> s.t. 1 &le; <i>i</i> &le; <i>N</i>) which are either integral or accurate to one digit after decimal point.
<br>Process to the end of input.</p></div><p class="pst">Output</p><div class="ptx" lang="en-US"><p>For each test case, output <i>P</i> in scientific notation in a single line. If <i>P</i> is equal to zero, output &ldquo;0.000&rdquo;. If 1 &le; |<i>P</i>| &lt; 10, output <i>P</i> directly with its fractional part rounded to three decimal places. In any other cases, output <i>P</i> in the format <i>x</i>E<i>n</i> where <i>P</i> = <i>x</i> &times; 10<i><sup>n</sup></i> (1 &le; |<i>x</i>| &lt; 10 and <i>n</i> is an integer). <i>x</i> should also be rounded to three digits after decimal point.</p></div><p class="pst">Sample Input</p><pre class="sio">5
-5.0 2.0 3.0 -2.0 0.5
3
-1 0 -1</pre><p class="pst">Sample Output</p><pre class="sio">6.000E1
0.000</pre><p class="pst">Hint</p><div class="ptx" lang="en-US">Built-in floating-point types provided by the compilers may not hold <i>P</i>.</div><p class="pst">