</p><div class="ptx" lang="en-US"><img src=images/3032_1.png align=right hspace=10><span lang="en-us"><p>The magician shuffles a small pack of cards, holds it face down and performs the following procedure:</p><ol><li>The top card is moved to the bottom of the pack. The new top card is dealt face up onto the table. It is the Ace of Spades.</li><li>Two cards are moved one at a time from the top to the bottom. The next card is dealt face up onto the table. It is the Two of Spades.</li><li>Three cards are moved one at a timeâ€¦</li><li>This goes on until the <i>n</i>th and last card turns out to be the <i>n</i> of Spades.</li></ol><p>This impressive trick works if the magician knows how to arrange the cards beforehand (and knows how to give a false shuffle). Your program has to determine the initial order of the cards for a given number of cards, 1 &le; n &le; 13.</p></span></div><p class="pst">Input</p><div class="ptx" lang="en-US"><p>On the first line of the input is a single positive integer, telling the number of test cases to follow. Each case consists of one line containing the integer <i>n</i>.</p></div><p class="pst">Output</p><div class="ptx" lang="en-US"><span lang="en-us"><p>For each test case, output a line with the correct permutation of the values 1 to <i>n</i>, space separated. The first number showing the top card of the pack, etc&hellip;</p></span></div><p class="pst">Sample Input</p><pre class="sio">2
4
5</pre><p class="pst">Sample Output</p><pre class="sio">2 1 4 3
3 1 4 5 2</pre><p class="pst">