</p><div class="ptx" lang="en-US"><p>In 2300, the Life Science Division of Federal Republic of Space starts a very ambitious project to complete the genome sequencing of all living creatures in the entire universe and develop the genomic database of all space life. Thanks to scientific research over many years, it has been known that the genome of any species consists of at most 26 kinds of molecules, denoted by English capital letters (<i>i.e.</i> <tt>A</tt> to <tt>Z</tt>).</p><p>What will be stored into the database are plain strings consisting of English capital letters. In general, however, the genome sequences of space life include frequent repetitions and can be awfully long. So, for efficient utilization of storage, we compress <i>N</i>-times repetitions of a letter sequence <i>seq</i> into <i>N</i><tt>(</tt><i>seq</i><tt>)</tt>, where <i>N</i> is a natural number greater than or equal to two and the length of <i>seq</i> is at least one. When <i>seq</i> consists of just one letter <i>c</i>, we may omit parentheses and write <i>Nc</i>.</p><p>For example, a fragment of a genome sequence:</p><blockquote><p><tt>ABABABABXYXYXYABABABABXYXYXYCCCCCCCCCC</tt></p></blockquote><p>can be compressed into:</p><blockquote><p><tt>4(AB)XYXYXYABABABABXYXYXYCCCCCCCCCC</tt></p></blockquote><p>by replacing the first occurrence of <tt>ABABABAB</tt> with its compressed form. Similarly, by replacing the following repetitions of <tt>XY</tt>, <tt>AB</tt>, and <tt>C</tt>, we get:</p><blockquote><p><tt>4(AB)3(XY)4(AB)3(XY)10C</tt></p></blockquote><p>Since <tt>C</tt> is a single letter, parentheses are omitted in this compressed representation. Finally, we have:</p><blockquote><p><tt>2(4(AB)3(XY))10C</tt></p></blockquote><p>by compressing the repetitions of <tt>4(AB)3(XY)</tt>. As you may notice from this example, parentheses can be nested.</p><p>Your mission is to write a program that uncompress compressed genome sequences.</p></div><p class="pst">Input</p><div class="ptx" lang="en-US"><p>The input consists of multiple lines, each of which contains a character string <i>s</i> and an integer <i>i</i> separated by a single space.</p><p>The character string <i>s</i>, in the aforementioned manner, represents a genome sequence. You may assume that the length of <i>s</i> is between 1 and 100, inclusive. However, of course, the genome sequence represented by <i>s</i> may be much, much, and much longer than 100. You may also assume that each natural number in <i>s</i> representing the number of repetitions is at most 1,000.</p><p>The integer <i>i</i> is at least zero and at most one million.</p><p>A line containing two zeros separated by a space follows the last input line and indicates the end of the input.</p></div><p class="pst">Output</p><div class="ptx" lang="en-US"><p>For each input line, your program should print a line containing the <i>i</i>-th letter in the genome sequence that <i>s</i> represents. If the genome sequence is too short to have the <i>i</i>-th element, it should just print a zero. No other characters should be printed in the output lines. Note that in this problem the index number begins from zero rather than one and therefore the initial letter of a sequence is its zeroth element.</p></div><p class="pst">Sample Input</p><pre class="sio">ABC 3
ABC 0
2(4(AB)3(XY))10C 30
1000(1000(1000(1000(1000(1000(NM)))))) 999999
0 0</pre><p class="pst">Sample Output</p><pre class="sio">0
A
C
M</pre><p class="pst">