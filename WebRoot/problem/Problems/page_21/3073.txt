</p><div class="ptx" lang="en-US"><span lang="en-us"><p>To thwart content-based spam filters, spammers often modify the text of a spam email to prevent its recognition by automatic filtering programs. For any plain text string s (containing only upper-case letters), let &Phi;(<i>s</i>) denote the string obtained by substituting each letter with its &ldquo;spam alphabet&rdquo; equivalent:</p><div align="center"><table border="0"><tr><td width="5%"><code>A</code></td><td width="7%"><code>4</code></td><td width="38%">(four)</td><td width="5%"><code>N</code></td><td width="7%"><code>|\|</code></td><td width="38%">(pipe backslash pipe)</td></tr><tr><td width="5%"><code>B</code></td><td width="7%"><code>|3</code></td><td width="38%">(pipe three)</td><td width="5%"><code>O</code></td><td width="7%"><code>0</code></td><td width="38%">(zero)</td></tr><tr><td width="5%"><code>C</code></td><td width="7%"><code>(</code></td><td width="38%">(left-parenthesis)</td><td width="5%"><code>P</code></td><td width="7%"><code>|0</code></td><td width="38%">(pipe zero)</td></tr><tr><td width="5%"><code>D</code></td><td width="7%"><code>|)</code></td><td width="38%">(pipe right-parenthesis)</td><td width="5%"><code>Q</code></td><td width="7%"><code>(,)</code></td><td width="38%">(left-parenthesis comma right-parenthesis)</td></tr><tr><td width="5%"><code>E</code></td><td width="7%"><code>3</code></td><td width="38%">(three)</td><td width="5%"><code>R</code></td><td width="7%"><code>|?</code></td><td width="38%">(pipe question-mark)</td></tr><tr><td width="5%"><code>F</code></td><td width="7%"><code>|=</code></td><td width="38%">(pipe equals)</td><td width="5%"><code>S</code></td><td width="7%"><code>5</code></td><td width="38%">(five)</td></tr><tr><td width="5%"><code>G</code></td><td width="7%"><code>6</code></td><td width="38%">(six)</td><td width="5%"><code>T</code></td><td width="7%"><code>7</code></td><td width="38%">(seven)</td></tr><tr><td width="5%"><code>H</code></td><td width="7%"><code>#</code></td><td width="38%">(pound)</td><td width="5%"><code>U</code></td><td width="7%"><code>|_|</code></td><td width="38%">(pipe underscore pipe)</td></tr><tr><td width="5%"><code>I</code></td><td width="7%"><code>|</code></td><td width="38%">(pipe)</td><td width="5%"><code>V</code></td><td width="7%"><code>\/</code></td><td width="38%">(backslash forward-slash)</td></tr><tr><td width="5%"><code>J</code></td><td width="7%"><code>_|</code></td><td width="38%">(underscore pipe)</td><td width="5%"><code>W</code></td><td width="7%"><code>\/\/</code></td><td width="38%">(backslash forward-slash backslash forward-slash)</td></tr><tr><td width="5%"><code>K</code></td><td width="7%"><code>|&lt;</code></td><td width="38%">(pipe less-than)</td><td width="5%"><code>X</code></td><td width="7%"><code>&gt;&lt;</code></td><td width="38%">(greater-than less-than)</td></tr><tr><td width="5%"><code>L</code></td><td width="7%"><code>|_</code></td><td width="38%">(pipe underscore)</td><td width="5%"><code>Y</code></td><td width="7%"><code>-/</code></td><td width="38%">(minus forward-slash)</td></tr><tr><td width="5%"><code>M</code></td><td width="7%"><code>|\/|</code></td><td width="38%">(pipe backslash forward-slash pipe)</td><td width="5%"><code>Z</code></td><td width="7%"><code>2</code></td><td width="38%">(two)</td></tr></table></div><p>In this scheme, any plain text message <i>s</i> corresponds to exactly one spam-encoded message &Phi;(<i>s</i>). The reverse, however, is not necessarily true: a spam-encoded message may correspond to more than one plain text message.</p><p>Given a plain text message <i>s</i>, your goal is to determine the number of unique plain text messages whose spam encoding is &Phi;(<i>s</i>).</p></span></div><p class="pst">Input</p><div class="ptx" lang="en-US"><span lang="en-us"><p>The input test file will contain multiple test cases. Each test case consists of a single line containing a plain text string s containing from 1 to 100 upper-case letters. The end-of-file is denoted by a single line containing the word &ldquo;end&rdquo;.</p></span></div><p class="pst">Output</p><div class="ptx" lang="en-US"><p>For each test case, print the number of unique plain text messages (including the original message) whose spam encoding is &Phi;(<i>s</i>). The number of unique plain text messages is guaranteed to be no greater than 1,000,000,000.</p></div><p class="pst">Sample Input</p><pre class="sio">BU
UJ
THEQUICKBROWNFOXJUMPEDOVERTHELAZYDOGS
end</pre><p class="pst">Sample Output</p><pre class="sio">6
5
144</pre><p class="pst">Hint</p><div class="ptx" lang="en-US"><span lang="en-us"><p>In the first test case, the spam encoding of &lsquo;<code>BU</code>&rsquo; is &lsquo;<code>|3|_|</code>&rsquo;. The 6 plain text messages with this spam encoding are &lsquo;<code>BU</code>&rsquo;, &lsquo;<code>IEU</code>&rsquo;, &lsquo;<code>BIJ</code>&rsquo;, &lsquo;<code>IEIJ</code>&rsquo;, &lsquo;<code>BLI</code>&rsquo;, and &lsquo;<code>IELI</code>&rsquo;. In the second test case, the spam encoding of &lsquo;<code>UJ</code>&rsquo; is &lsquo;<code>|_|_|</code>&rsquo;. The 5 plain text messages with this spam encoding are &lsquo;<code>UJ</code>&rsquo;, &lsquo;<code>LU</code>&rsquo;, &lsquo;<code>IJJ</code>&rsquo;, &lsquo;<code>LLI</code>&rsquo;, and &lsquo;<code>LIJ</code>&rsquo;.</p></span></div><p class="pst">