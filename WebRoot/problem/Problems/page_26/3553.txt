</p><div class="ptx" lang="en-US"><p>There are <b>n</b> preemptive jobs to be processed on a single machine. Each job <i>j</i> has a processing time <b>p<sub>j</sub></b> and deadline <b>d<sub>j</sub></b>. Preemptive constrains are specified by oriented graph without cycles. Arc (<i>i,j</i>) in this graph means that job <i>i</i> has to be processed before job <i>j</i>. A solution is specified by a sequence of the jobs. For any solution the completion time <b>C<sub>j</sub></b> is easily determined. </p><p>The objective is to find the optimal solution in order to minimize</p><p style="padding-left: 2em;">max{<b>C<sub>j</sub></b>-<b>d<sub>j</sub></b>, 0}.</p></div><p class="pst">Input</p><div class="ptx" lang="en-US"><p>The first line contains a single integer <b>n</b>, 1 ≤ <b>n</b> ≤ 50000. Each of the next <b>n</b> lines contains two integers <b>p<sub>j</sub></b> and <b>d<sub>j</sub></b>, 0 ≤ <b>p<sub>j</sub></b> ≤ 1000, 0 ≤ <b>d<sub>j</sub></b> ≤ 1000000, separated by one or more spaces. Line <b>n</b>+2 contains an integer <b>m</b> (number of arcs), 0 ≤ <b>m</b> ≤ 10*<b>n</b>. Each of the next <b>m</b> lines contains two integers <i>i</i> and <i>j</i>, 1 ≤ <i>i</i>, <i>j</i> ≤ n.</p></div><p class="pst">Output</p><div class="ptx" lang="en-US"><p>Each of the <b>n</b> lines contains integer i (number of job in the optimal sequence).</p></div><p class="pst">Sample Input</p><pre class="sio">2
4 1
4 0
1
1 2</pre><p class="pst">Sample Output</p><pre class="sio">1
2</pre><p class="pst">