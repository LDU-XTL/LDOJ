</p><div class="ptx" lang="en-US"><p>The French author Georges Perec (1936&ndash;1982) once wrote a book, La disparition, without the letter <tt>&#39;e&#39;</tt>. He was a member of the Oulipo group. A quote from the book:</p><blockquote><p>Tout avait Pair normal, mais tout s&#8217;affirmait faux. Tout avait Fair normal, d&#8217;abord, puis surgissait l&#8217;inhumain, l&#8217;affolant. Il aurait voulu savoir o&ugrave; s&#8217;articulait l&#8217;association qui l&#8217;unissait au roman : stir son tapis, assaillant &agrave; tout instant son imagination, l&#8217;intuition d&#8217;un tabou, la vision d&#8217;un mal obscur, d&#8217;un quoi vacant, d&#8217;un non-dit : la vision, l&#8217;avision d&#8217;un oubli commandant tout, o&ugrave; s&#8217;abolissait la raison : tout avait l&#8217;air normal mais&#8230;</p></blockquote><p>Perec would probably have scored high (or rather, low) in the following contest. People are asked to write a perhaps even meaningful text on some subject with as few occurrences of a given &#8220;word&#8221; as possible. Our task is to provide the jury with a program that counts these occurrences, in order to obtain a ranking of the competitors. These competitors often write very long texts with nonsense meaning; a sequence of 500,000 consecutive <tt>&#39;T&#39;</tt>s is not unusual. And they never use spaces.</p><p>So we want to quickly find out how often a word, i.e., a given string, occurs in a text. More formally: given the alphabet {<tt>&#39;A&#39;</tt>, <tt>&#39;B&#39;</tt>, <tt>&#39;C&#39;</tt>, &#8230;, <tt>&#39;Z&#39;</tt>} and two finite strings over that alphabet, a word <i>W</i> and a text <i>T</i>, count the number of occurrences of <i>W</i> in <i>T</i>. All the consecutive characters of W must exactly match consecutive characters of <i>T</i>. Occurrences may overlap.</p></div><p class="pst">Input</p><div class="ptx" lang="en-US"><p>The first line of the input file contains a single number: the number of test cases to follow. Each test case has the following format:</p><ul><li>One line with the word <i>W</i>, a string over {<tt>&#39;A&#39;</tt>, <tt>&#39;B&#39;</tt>, <tt>&#39;C&#39;</tt>, &#8230;, <tt>&#39;Z&#39;</tt>}, with 1 &#8804; |<i>W</i>| &#8804; 10,000 (here |<i>W</i>| denotes the length of the string <i>W</i>).</li><li>One line with the text <i>T</i>, a string over {<tt>&#39;A&#39;</tt>, <tt>&#39;B&#39;</tt>, <tt>&#39;C&#39;</tt>, &#8230;, <tt>&#39;Z&#39;</tt>}, with |<i>W</i>| &#8804; |<i>T</i>| &#8804; 1,000,000.</li></ul></div><p class="pst">Output</p><div class="ptx" lang="en-US"><p>For every test case in the input file, the output should contain a single number, on a single line: the number of occurrences of the word <i>W</i> in the text <i>T</i>.</p></div><p class="pst">Sample Input</p><pre class="sio">3
BAPC
BAPC
AZA
AZAZAZA
VERDI
AVERDXIVYERDIAN</pre><p class="pst">Sample Output</p><pre class="sio">1
3
0</pre><p class="pst">