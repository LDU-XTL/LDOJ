</p><div class="ptx" lang="en-US"><p>As more and more computers are equipped with dual core CPU, SetagLilb, the Chief Technology Officer of TinySoft Corporation, decided to update their famous product - SWODNIW.</p><p>The routine consists of <i>N</i> modules, and each of them should run in a certain core. The costs for all the routines to execute on two cores has been estimated. Let's define them as <i>A<sub>i</sub></i> and <i>B<sub>i</sub></i>. Meanwhile, <i>M</i> pairs of modules need to do some data-exchange. If they are running on the same core, then the cost of this action can be ignored. Otherwise, some extra cost are needed. You should arrange wisely to minimize the total cost.</p></div><p class="pst">Input</p><div class="ptx" lang="en-US"><p>There are two integers in the first line of input data, <i>N</i> and <i>M</i> (1 &le; <i>N</i> &le; 20000, 1 &le; <i>M</i> &le; 200000) .<br>The next <i>N</i> lines, each contains two integer, <i>A<sub>i</sub></i> and <i>B<sub>i</sub></i>.<br>In the following <i>M</i> lines, each contains three integers: <i>a</i>, <i>b</i>, <i>w</i>. The meaning is that if module <i>a</i> and module <i>b</i> don't execute on the same core, you should pay extra <i>w</i> dollars for the data-exchange between them.</p></div><p class="pst">Output</p><div class="ptx" lang="en-US"><p>Output only one integer, the minimum total cost.</p></div><p class="pst">Sample Input</p><pre class="sio">3 1
1 10
2 10
10 3
2 3 1000
</pre><p class="pst">Sample Output</p><pre class="sio">13</pre><p class="pst">